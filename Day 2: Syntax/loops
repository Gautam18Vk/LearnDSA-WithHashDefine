🚀 Types of Loops in C++
🔹 1. For Loop

Use a for loop when you already know how many times you want to repeat something.

for (initialization; condition; update) {
    // code to run each time
}
💻 Example

#include <iostream>
using namespace std;

int main() {
    for (int i = 1; i <= 5; i++) {
        cout << i << " ";
    }
    return 0;
}
🖥️ Output
1 2 3 4 5
Here the loop starts from 1, checks i <= 5 each time, prints i, then adds 1 and repeats.

🔹 2. While Loop
A while loop runs as long as its condition stays true.
It’s great when you don’t know beforehand how many times something should happen.

while (condition) {
    // code to run while true
}
💻 Example

#include <iostream>
using namespace std;

int main() {
    int i = 1;
    while (i <= 5) {
        cout << i << " ";
        i++;
    }
    return 0;
}
🖥️ Output
1 2 3 4 5

🔹 3. Do-While Loop
This one is special — it always runs at least once, even if the condition is false.

do {
    // code to run once first
} while (condition);
💻 Example

#include <iostream>
using namespace std;

int main() {
    int i = 6;
    do {
        cout << i << " ";
        i++;
    } while (i <= 5);
    return 0;
}
🖥️ Output

6
Even though i <= 5 is false right away, the body executes once before the check.

🔹 4. Nested Loops

Sometimes we need a loop inside another loop — for example, when printing patterns or working with 2D data.

💻 Example

#include <iostream>
using namespace std;

int main() {
    for (int i = 1; i <= 3; i++) {
        for (int j = 1; j <= 3; j++) {
            cout << "(" << i << "," << j << ") ";
        }
        cout << endl;
    }
    return 0;
}
🖥️ Output

(1,1) (1,2) (1,3)
(2,1) (2,2) (2,3)
(3,1) (3,2) (3,3)
